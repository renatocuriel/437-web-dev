@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyIiwiaWF0IjoxNzQyMDI5NDQ2LCJleHAiOjE3NDIxMTU4NDZ9.J4PqU1SgC68TlxAm91MufoW4I-wFZRtieNyhUkiThHQ
@authToken2 = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMiIsImlhdCI6MTc0MjAyOTUyMSwiZXhwIjoxNzQyMTE1OTIxfQ.51j3byul4FYqiJfjpv8IG6FQFeyj-Kp75j3up4ykc3Q
### ðŸ”¹ Register a New User 1
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "username": "testuser",
  "password": "securepassword123"
}

### ðŸ”¹ Register a New User 2
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "username": "testuser2",
  "password": "securepassword123"
}

### ðŸ”¹ Login and Get JWT Token
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "username": "testuser2",
  "password": "securepassword123"
}

### ðŸ”¹ Test Unauthorized API Access (Should Fail)
GET http://localhost:3000/api/protected-route
Content-Type: application/json

### ðŸ”¹ Fetch User Data (Verify it was added to the users collection)
GET http://localhost:3000/api/users/me
Authorization: Bearer {{authToken2}}

################################################################
### ðŸ“š BOOKS API

### ðŸ”¹ Search for Books in Google Books API
GET http://localhost:3000/api/google-books/search?q=Design Patterns
Authorization: Bearer {{authToken}}

### ðŸ”¹ Add a New Book to Database
POST http://localhost:3000/api/books
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "title": "The Pragmatic Programmer",
  "author": ["Andrew Hunt", "David Thomas"],
  "coverImage": "https://example.com/book-cover.jpg",
  "genre": ["Software Development"],
  "totalPages": 352,
  "description": "A classic book on programming best practices."
}

### ðŸ”¹ Add a New Book to Database (User 1)
POST http://localhost:3000/api/books
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "title": "Clean Code",
  "author": ["Robert C. Martin"],
  "coverImage": "https://example.com/clean-code.jpg",
  "genre": ["Software Engineering"],
  "totalPages": 464,
  "description": "A handbook of agile software craftsmanship, focusing on writing clean, maintainable code."
}

### ðŸ”¹ Add a New Book to Database 2
POST http://localhost:3000/api/books
Content-Type: application/json
Authorization: Bearer {{authToken2}}

{
  "title": "Test 2 book ",
  "author": ["Diego Curiel"],
  "coverImage": "https://example.com/book-cover.jpg",
  "genre": ["Backend Dev"],
  "totalPages": 100,
  "description": "You know what it is."
}

### ðŸ”¹ Add a New Book to Database (User 2)
POST http://localhost:3000/api/books
Content-Type: application/json
Authorization: Bearer {{authToken2}}

{
  "title": "System Design Interview",
  "author": ["Alex Xu"],
  "coverImage": "https://example.com/system-design.jpg",
  "genre": ["Software Architecture"],
  "totalPages": 320,
  "description": "A comprehensive guide to system design interviews with real-world examples and trade-offs."
}

### GET ALL BOOKS
GET http://localhost:3000/api/books
Authorization: Bearer {{authToken}}

################################################################
### ðŸ“– CURRENTLY READING API

### ðŸ”¹ Set Currently Reading Book1
POST http://localhost:3000/api/currently-reading
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "bookId": "67d54577ee8356299149f48d",
  "currentPage": 50
}

### ðŸ”¹ Set Currently Reading Book2
POST http://localhost:3000/api/currently-reading
Content-Type: application/json
Authorization: Bearer {{authToken2}}

{
  "bookId": "67d547cafa38ac2623eb0179",
  "currentPage": 50
}

### ðŸ”¹ Get Currently Reading Book 1
GET http://localhost:3000/api/currently-reading
Authorization: Bearer {{authToken}}

### ðŸ”¹ Get Currently Reading Book 2
GET http://localhost:3000/api/currently-reading
Authorization: Bearer {{authToken2}}

### ðŸ”¹ Update Current Page in Currently Reading
PATCH http://localhost:3000/api/currently-reading
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "currentPage": 75
}

### ðŸ”¹ Finish Reading (Move to Finished Books) 1
DELETE http://localhost:3000/api/currently-reading
Authorization: Bearer {{authToken}}

### ðŸ”¹ Finish Reading (Move to Finished Books) 2
DELETE http://localhost:3000/api/currently-reading
Authorization: Bearer {{authToken2}}

################################################################
### ðŸ“‚ LISTS API

### ðŸ”¹ Create a New List
POST http://localhost:3000/api/lists
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "listName": "Favorites"
}

### ðŸ”¹ Get All User Lists
GET http://localhost:3000/api/lists
Authorization: Bearer {{authToken}}

### ðŸ”¹ Add a Book to a List
PATCH http://localhost:3000/api/lists/add-book
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "listId": "LIST_OBJECT_ID_HERE",
  "bookId": "BOOK_OBJECT_ID_HERE"
}

### ðŸ”¹ Remove a Book from a List
PATCH http://localhost:3000/api/lists/remove-book
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "listId": "LIST_OBJECT_ID_HERE",
  "bookId": "BOOK_OBJECT_ID_HERE"
}

### ðŸ”¹ Delete a List
DELETE http://localhost:3000/api/lists
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "listId": "LIST_OBJECT_ID_HERE"
}

################################################################
### ðŸ“œ FINISHED BOOKS API

### ðŸ”¹ Get All Finished Books
GET http://localhost:3000/api/finished-books
Authorization: Bearer {{authToken}}

#################################################################
### ðŸ“‚ LISTS API

### Get All Lists for the Logged-in User 1
GET http://localhost:3000/api/lists
Authorization: Bearer {{authToken}}

### Get All Lists for the Logged-in User 2
GET http://localhost:3000/api/lists
Authorization: Bearer {{authToken2}}

### Create a New List 1
POST http://localhost:3000/api/lists
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "listName": "Favorites"
}

### Create a New List 2
POST http://localhost:3000/api/lists
Content-Type: application/json
Authorization: Bearer {{authToken2}}

{
  "listName": "Finance"
}

### Add a Book to a List 11
POST http://localhost:3000/api/lists/67d55bde6dd2bb4c780a8fdc/add
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "bookId": "67d54577ee8356299149f48d"
}

### Add a Book to a List 12
POST http://localhost:3000/api/lists/67d55bde6dd2bb4c780a8fdc/add
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "bookId": "67d55ca36dd2bb4c780a8fe2"
}

### Add a Book to a List 21
POST http://localhost:3000/api/lists/67d55ec534c858953ed8b77f/add
Content-Type: application/json
Authorization: Bearer {{authToken2}}

{
  "bookId": "67d547cafa38ac2623eb0179"
}

### Add a Book to a List 22
POST http://localhost:3000/api/lists/67d55ec534c858953ed8b77f/add
Content-Type: application/json
Authorization: Bearer {{authToken2}}

{
  "bookId": "67d55cb06dd2bb4c780a8fe5"
}

### Remove a Book from a List
DELETE http://localhost:3000/api/lists/67d55be56dd2bb4c780a8fdf/book/67d55cb06dd2bb4c780a8fe5
Authorization: Bearer {{authToken2}}

### Delete a List
DELETE http://localhost:3000/api/lists/67d55be56dd2bb4c780a8fdf
Authorization: Bearer {{authToken2}}